server.port=6082
server.servlet.context-path=/

eureka.client.register-with-eureka=false

eureka.client.service-url.defaultZone=http://eureka01:7081/eureka,http://eureka02:7082/eureka,http://eureka03:7083/eureka


# 配置ribbon脱离eureka实现负载均衡
# 配置使用ribbon的时候不加载eureka
ribbon.eureka.enabled=false
# 配置ribbon的负载均衡的服务器(8081,8082,8083)
# 配置规则是provider中的spring.application.name的值(必须要小写).ribbon.listOfServers=localhost:8081,localhost:8082,localhost:8083
book-provider.ribbon.listOfServers=localhost:8081,localhost:8082,localhost:8083
# 指定ribbon的负载均衡算法(默认是轮询，如果使用的是默认则不需要更改，如果使用的其他的算法，则必须要指定)
# 配置规则是provider中的spring.application.name的值(必须要小写).ribbon.NFLoadBalancerRuleClassName=负载均衡的算法
book-provider.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule