server.port=5081
server.servlet.context-path=/

spring.application.name=user-zuul

eureka.client.service-url.defaultZone=http://eureka01:7081/eureka,http://eureka02:7082/eureka,http://eureka03:7083/eureka
eureka.instance.instance-id=user-zuul-5081

# 使用路由+provider的spring.application.name的值+@RequestMapping()的值直接访问到provider
# 这里并不是zuul起作用，eureka的服务发现在起作用-->localhost:5081/book-provider/all
# book-provider是真实路径，也就是说consumer就是通过这个路径访问到provider
# 添加路由的规则
# 一旦把真实路径隐藏了，也就是说在eureka中的所有的consumer去访问的时候也访问不到了
# 在隐藏真实路径之前，首先先指定真实路径
# provider-project:就是命名空间，和eureka的一样
zuul.routes.provider-project.service-id=user-provider
# 需要隐藏真实路径，也就是说可以通过虚拟路径来映射真实路径
# ！！虚拟的路径必须要和真实的路径的命名空间一模一样！！
# 虚拟路径映射支持通配符
# **:没有一个*，规则必须是**
# localhost:8081/all
# ** --> @RequestMapping("/all")
# localhost:5081/seven/all
zuul.routes.provider-project.path=/hxx/**
# 虽然已经实现了虚拟机路径和真实路径的映射，但是当使用book-provider真实路径的时候仍然可以访问
# 也就是说必须要实现当用户localhost:5081/book-provider/all这个路径访问的时候，不能访问到
# 禁用真实的访问路径(book-provider,localhost:6081/**)
# book-provider,order-provider,cart-provider,sso-provider
# 支持通配符
# zuul.ignored-services=book-provider
# 如果是properties文件直接使用*即可，如果是yml文件"*"
zuul.ignored-services=*
# 如果是yml文件则必须要使用双引号
#zuul:
#  ignored-services: "*"
# 给访问的路径添加前缀(细节，可以不配置)，一般前缀都是项目名/公司名
# localhost:5081/seven/all ---> localhost:5081/aaa/seven/all
# 前台项目(给客户端看的项目) ---> 是前台项目组完成(没有后台的继续强大，只需要做查询)(订单，评论，个人信息，购物车)
# 后台项目(后台管理系统) ---> 后台项目组完成(权限角色和用户)
# 前台项目:192.168.23.110:8081/index-->192.168.23.110:8081/front/index
# 后台项目:192.168.23.111:8081/index-->192.168.23.111:8081/back/index
zuul.prefix=/aaa